
// autogenerated tests for w3strings (require modBase-Utils)
// language: en

function _test_verifyW3strings() : int {
    var failed: int;
    failed = 0;

    // test by id
    if (!assertTrue(GetLocStringById(2112116000) == "Sign/Inventory Modifier", "w3string.byId: 2112116000")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116001) == "Use Item", "w3string.byId: 2112116001")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116002) == "Equip Item", "w3string.byId: 2112116002")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116003) == "Swap and Equip Item", "w3string.byId: 2112116003")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116004) == "Equip Bomb", "w3string.byId: 2112116004")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116005) == "Swap and Equip Bomb", "w3string.byId: 2112116005")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116006) == "Fire Crossbow", "w3string.byId: 2112116006")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116007) == "Aim Crossbow", "w3string.byId: 2112116007")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116008) == "Realtime Gamepad Controls", "w3string.byId: 2112116008")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116009) == "Realtime Gamepad Controls Preset", "w3string.byId: 2112116009")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116010) == "Default", "w3string.byId: 2112116010")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116011) == "Controller Layout", "w3string.byId: 2112116011")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116012) == "Realtime Gamepad Controls", "w3string.byId: 2112116012")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116013) == "Xbox Color Coded Signs", "w3string.byId: 2112116013")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116014) == "Gamepad Plus Inspired", "w3string.byId: 2112116014")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116015) == "Default Quick Access Inventory", "w3string.byId: 2112116015")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116016) == "Potions", "w3string.byId: 2112116016")) failed += 1;
    if (!assertTrue(GetLocStringById(2112116017) == "Items", "w3string.byId: 2112116017")) failed += 1;

    // test by key
    if (!assertTrue(GetLocStringByKey("ControlLayout_RGC_SignInvModifier") == "Sign/Inventory Modifier", "w3string.byKey: ControlLayout_RGC_SignInvModifier")) failed += 1;
    if (!assertTrue(GetLocStringByKey("ControlLayout_RGC_UseItem") == "Use Item", "w3string.byKey: ControlLayout_RGC_UseItem")) failed += 1;
    if (!assertTrue(GetLocStringByKey("ControlLayout_RGC_ItemSlot") == "Equip Item", "w3string.byKey: ControlLayout_RGC_ItemSlot")) failed += 1;
    if (!assertTrue(GetLocStringByKey("ControlLayout_RGC_ItemSlotHold") == "Swap and Equip Item", "w3string.byKey: ControlLayout_RGC_ItemSlotHold")) failed += 1;
    if (!assertTrue(GetLocStringByKey("ControlLayout_RGC_BombSlot") == "Equip Bomb", "w3string.byKey: ControlLayout_RGC_BombSlot")) failed += 1;
    if (!assertTrue(GetLocStringByKey("ControlLayout_RGC_BombSlotHold") == "Swap and Equip Bomb", "w3string.byKey: ControlLayout_RGC_BombSlotHold")) failed += 1;
    if (!assertTrue(GetLocStringByKey("ControlLayout_RGC_FireCrossbow") == "Fire Crossbow", "w3string.byKey: ControlLayout_RGC_FireCrossbow")) failed += 1;
    if (!assertTrue(GetLocStringByKey("ControlLayout_RGC_CrossbowHold") == "Aim Crossbow", "w3string.byKey: ControlLayout_RGC_CrossbowHold")) failed += 1;
    if (!assertTrue(GetLocStringByKey("panel_Config_RGC_ConfigName") == "Realtime Gamepad Controls", "w3string.byKey: panel_Config_RGC_ConfigName")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_Mods_Config_RGC_ConfigName") == "Realtime Gamepad Controls Preset", "w3string.byKey: preset_Mods_Config_RGC_ConfigName")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_Config_RGC_ConfigNameDefault") == "Default", "w3string.byKey: preset_value_Config_RGC_ConfigNameDefault")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_Config_RGC_ControlScheme") == "Controller Layout", "w3string.byKey: option_Config_RGC_ControlScheme")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_Config_RGC_SchemeRGC") == "Realtime Gamepad Controls", "w3string.byKey: preset_value_Config_RGC_SchemeRGC")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_Config_RGC_SchemeXBCC") == "Xbox Color Coded Signs", "w3string.byKey: preset_value_Config_RGC_SchemeXBCC")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_Config_RGC_GP") == "Gamepad Plus Inspired", "w3string.byKey: preset_value_Config_RGC_GP")) failed += 1;
    if (!assertTrue(GetLocStringByKey("option_Config_RGC_DefaultInventory") == "Default Quick Access Inventory", "w3string.byKey: option_Config_RGC_DefaultInventory")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_Config_RGC_DefaultPotions") == "Potions", "w3string.byKey: preset_value_Config_RGC_DefaultPotions")) failed += 1;
    if (!assertTrue(GetLocStringByKey("preset_value_Config_RGC_DefaultItems") == "Items", "w3string.byKey: preset_value_Config_RGC_DefaultItems")) failed += 1;

    // return number of failed
    return failed;
}

exec function test_verifyW3Strings() {
    logTestResult("Verify W3Strings", _test_verifyW3strings(), true);
}
